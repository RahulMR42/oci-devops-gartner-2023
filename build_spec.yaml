version: 0.1
component: build
timeoutInSeconds: 600
runAs: root
shell: bash
env:
  exportedVariables:
    - BUILDRUN_HASH_INSTANCE
    - BUILDRUN_HASH_CI
    - STATIC_IMAGE_TAG
    - OBJECT_BUCKET_NAME
    - OBJECT_NAMESPACE

  variables:
    "JAVA_HOME" : "/usr/lib64/graalvm/graalvm22-ee-java17"
    # PATH is a reserved variable and cannot be defined as a variable.
    # However, PATH can be changed in a build step and the change is visible in subsequent steps.
steps:
  - type: Command
    name: "Define unique  tag for Instance"
    timeoutInSeconds: 40
    command: |
      export BUILDRUN_HASH_INSTANCE=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7`
      echo "BUILDRUN_HASH_INSTANCE: " BUILDRUN_HASH_INSTANCE

  - type: Command
    name: "Define unique image tag for Container Instance"
    timeoutInSeconds: 40
    command: |
      export BUILDRUN_HASH_CI=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7`
      echo "BUILDRUN_HASH_CI: " BUILDRUN_HASH_CI
      export STATIC_IMAGE_TAG=${IMAGE_STATIC_TAG}
      export OBJECT_BUCKET_NAME=${BUCKET_NAME}
      export OBJECT_NAMESPACE=${NAMESPACE_NAME}

  - type: Command
    name: "Install GraalVM 22.x Native Image for Java17"
    command: |
      yum -y install graalvm22-ee-17-native-image
  - type: Command
    name: "Set PATH Variable"
    command: |
      export PATH=$JAVA_HOME/bin:$PATH
  # - type: Command
  #   name: "Build a Jar"
  #   command: |
  #     mvn --no-transfer-progress clean package
  - type: Command
    name: "Build a native executable Graal Binary"
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}/app_for_computeinstance
      mvn --no-transfer-progress -Pnative -DskipTests package

  - type: Command
    timeoutInSeconds: 1200
    name: "Build container image for CI"
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}/app_for_containerinstance
      cd python_app
      docker build --pull --rm -t python_fast_app .    

  - type: Command
    timeoutInSeconds: 6000
    name: "Upload Terraform config for CI"
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}/app_for_containerinstance
      cd terraform
      cat variables.tf | envsubst >variables.tf_tmp
      cp variables.tf_tmp variables.tf
      cat remote-backend_template.tf| envsubst > remote-backend_template.tf_tmp
      cat remote-backend_template.tf_tmp|tr -d "[:blank:]"> remote-backend_template.tf
      rm remote-backend_template.tf_tmp
      rm variables.tf_tmp
      oci os object bulk-upload -ns ${NAMESPACE_NAME} -bn ${BUCKET_NAME} --src-dir ${OCI_PRIMARY_SOURCE_DIR}/app_for_containerinstance/terraform --overwrite --region ${REGION} --content-type auto --prefix devops_

    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 40
        runAs: root


outputArtifacts:
  # - name: app_jar
  #   type: BINARY
  #   location: target/my-app-1.0-SNAPSHOT.jar
  - name: app_native_executable
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/app_for_computeinstance/target/my-app

  - name: python_app_dockerimage
    type: DOCKER_IMAGE
    location: python_fast_app:latest

  - name: command_spec
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/app_for_containerinstance/command_spec.yaml